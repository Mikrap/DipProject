<Application x:Class="DiplomV3.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        
        <!-- Подключаем тему по умолчанию -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/LightTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Frame">
                <Setter Property="NavigationUIVisibility" Value="Hidden"/>
            </Style>
            

            <!-- Modern DatePicker Style -->
            <Style x:Key="ModernDatePicker" TargetType="DatePicker">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="10,5"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="IsTodayHighlighted" Value="True"/>
                <Setter Property="SelectedDateFormat" Value="Short"/>
                <Setter Property="DisplayDateStart" Value="2000-01-01"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePicker">
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="CalendarButtonStyle" TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="Transparent">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <DatePickerTextBox x:Name="PART_TextBox"
                                              Grid.Column="0"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              Padding="5,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Left"/>

                                        <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Style="{StaticResource CalendarButtonStyle}"
                                    Margin="5,0,5,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                            <TextBlock Text="📅" FontSize="14" VerticalAlignment="Center" 
                                                      Background="{DynamicResource SecondaryBackgroundColor}"
                                                      Foreground= "{DynamicResource PrimaryForegroundColor}"/>
                                        </Button>
                                    </Grid>
                                </Border>

                                <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=border}"
                           StaysOpen="False">
                                    <Border Background="{DynamicResource SecondaryBackgroundColor}"
                                BorderBrush="{DynamicResource BorderColor}"
                                BorderThickness="1"
                                CornerRadius="5"
                                Padding="5">
                                        <Calendar x:Name="PART_Calendar"
                                      Style="{StaticResource {x:Type Calendar}}"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Calendar Style -->
            <Style TargetType="Calendar">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="5"/>
            </Style>

            <!-- CalendarDayButton Style -->
            <Style TargetType="CalendarDayButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarDayButton">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Background" 
                                                   Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                   To="#FF444444"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Background" 
                                                   Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                   To="#FF666666"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="SelectedBackground" 
                                                   Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                   To="#FF0078D7"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Rectangle x:Name="Background" Fill="Transparent"/>
                                <Rectangle x:Name="SelectedBackground" Fill="Transparent" Opacity="0.5"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Стиль кнопки -->
            <Style x:Key="ModernTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="#FFF0F0F0"/>
                <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!-- Стиль для основной кнопки -->
            <Style x:Key="PrimaryButton" TargetType="Button">
                <Setter Property="Background" Value="#FF0078D7"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="8 4"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="4"/>
            </Style>

            <!-- Стиль для кнопки успеха -->
            <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
                <Setter Property="Background" Value="#FF28A745"/>
            </Style>

            <!-- Стиль для опасной кнопки -->
            <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
                <Setter Property="Background" Value="#FFDC3545"/>
            </Style>
            <Style TargetType="TreeViewItem">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="Margin" Value="1"/>
            </Style>

            <!-- Modern ComboBox Style -->
            
            <Style x:Key="GitHubButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundColor}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="5" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="#30363d"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#30363d"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#161b22"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="AlternateRowColor" Color="#F5F5F5"/>
            <!-- Modern ComboBox Style -->
            <Style x:Key="ModernComboBox" TargetType="ComboBox">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Margin" Value="0,5,0,0"/>
                <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"/>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="ContentSite"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsHitTestVisible="False"/>

                                    <ToggleButton x:Name="ToggleButton"
                                    Grid.Column="1"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Padding="5">
                                        <Path x:Name="Arrow"
                                Fill="{DynamicResource PrimaryForegroundColor}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </ToggleButton>
                                </Grid>

                                <Popup x:Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                                    <Border x:Name="DropDownBorder"
                                Background="{DynamicResource SecondaryBackgroundColor}"
                                BorderBrush="{DynamicResource BorderColor}"
                                BorderThickness="1"
                                CornerRadius="0,0,3,3">
                                        <ScrollViewer x:Name="ScrollViewer">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonHoverBorderColor}"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ComboBox Item Style -->
            <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
